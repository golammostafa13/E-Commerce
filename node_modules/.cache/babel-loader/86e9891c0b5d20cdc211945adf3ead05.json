{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\"; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAG7SurMyqgEMmVGc5IOe-qAXGdoaId7dA\",\n  authDomain: \"e-commerce-9c67f.firebaseapp.com\",\n  projectId: \"e-commerce-9c67f\",\n  storageBucket: \"e-commerce-9c67f.appspot.com\",\n  messagingSenderId: \"1027609693246\",\n  appId: \"1:1027609693246:web:160593a78e676378cb956f\"\n}; // Initialize Firebase\n\nconst app = initializeApp(firebaseConfig);\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nlet userInfo;\nconst provider = new GoogleAuthProvider();\nexport const signUp = () => {\n  const auth = getAuth();\n  signInWithPopup(auth, provider).then(result => {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    const credential = GoogleAuthProvider.credentialFromResult(result);\n    const token = credential.accessToken; // The signed-in user info.\n\n    const user = result.user;\n    userInfo = user; // ...\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.email; // The AuthCredential type that was used.\n\n    const credential = GoogleAuthProvider.credentialFromError(error); // ...\n  });\n};\nconst googleSign = {\n  signUp,\n  userInfo\n};","map":{"version":3,"sources":["/home/mostafa/Documents/OdinJs/E-commerce/src/asset/Firebase/firebase.js"],"names":["initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","getAuth","signInWithPopup","GoogleAuthProvider","userInfo","provider","signUp","auth","then","result","credential","credentialFromResult","token","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credentialFromError","googleSign"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B,C,CACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,kCAFS;AAGrBC,EAAAA,SAAS,EAAE,kBAHU;AAIrBC,EAAAA,aAAa,EAAE,8BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,eALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,MAAMC,GAAG,GAAGR,aAAa,CAACC,cAAD,CAAzB;AAEA,SAASQ,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,QAA6D,eAA7D;AACA,IAAIC,QAAJ;AACA,MAAMC,QAAQ,GAAG,IAAIF,kBAAJ,EAAjB;AACA,OAAO,MAAMG,MAAM,GAAG,MAAM;AAExB,QAAMC,IAAI,GAAGN,OAAO,EAApB;AACAC,EAAAA,eAAe,CAACK,IAAD,EAAOF,QAAP,CAAf,CACCG,IADD,CACOC,MAAD,IAAY;AACd;AACA,UAAMC,UAAU,GAAGP,kBAAkB,CAACQ,oBAAnB,CAAwCF,MAAxC,CAAnB;AACA,UAAMG,KAAK,GAAGF,UAAU,CAACG,WAAzB,CAHc,CAId;;AACA,UAAMC,IAAI,GAAGL,MAAM,CAACK,IAApB;AACAV,IAAAA,QAAQ,GAAEU,IAAV,CANc,CAOd;AACH,GATD,EASGC,KATH,CASUC,KAAD,IAAW;AAChB;AACA,UAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,UAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACK,KAApB,CALgB,CAMhB;;AACA,UAAMX,UAAU,GAAGP,kBAAkB,CAACmB,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;AACH,GAlBD;AAmBH,CAtBM;AAuBP,MAAMO,UAAU,GAAG;AACfjB,EAAAA,MADe;AAEfF,EAAAA;AAFe,CAAnB","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAG7SurMyqgEMmVGc5IOe-qAXGdoaId7dA\",\n  authDomain: \"e-commerce-9c67f.firebaseapp.com\",\n  projectId: \"e-commerce-9c67f\",\n  storageBucket: \"e-commerce-9c67f.appspot.com\",\n  messagingSenderId: \"1027609693246\",\n  appId: \"1:1027609693246:web:160593a78e676378cb956f\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nlet userInfo;\nconst provider = new GoogleAuthProvider();\nexport const signUp = () => {\n\n    const auth = getAuth();\n    signInWithPopup(auth, provider)\n    .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        userInfo =user;\n        // ...\n    }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n    });\n}\nconst googleSign = {\n    signUp,\n    userInfo\n}"]},"metadata":{},"sourceType":"module"}